{
    "tableName": "transaction_facts",
    "tableType": "REALTIME",
    "segmentsConfig": {
        "timeColumnName": "transaction_date",
        "timeType": "MILLISECONDS",
        "replication": "1",
        "schemaName": "transaction_facts"
    },
    "tenants": {
        "broker": "DefaultTenant",
        "server": "DefaultTenant"
    },
    "tableIndexConfig": {
        "loadMode": "MMAP",
        "invertedIndexColumns": [
            "transaction_type",
            "currency",
            "branch_id"
        ],
        "sortedColumn": [
            "transaction_date"
        ]
    },
    "ingestionConfig": {
        "streamIngestionConfig": {
            "streamConfigMaps": [
                {
                    "realtime.segment.flush.threshold.rows": "0",
                    "stream.kafka.decoder.prop.format": "JSON",
                    "key.serializer": "org.apache.kafka.common.serialization.StringSerializer",
                    "value.serializer": "org.apache.kafka.common.serialization.StringSerializer",
                    "stream.kafka.decoder.class.name": "org.apache.pinot.plugin.stream.kafka.KafkaJSONMessageDecoder",
                    "streamType": "kafka",
                    "stream.kafka.consumer.type": "LOWLEVEL",
                    "realtime.segment.flush.threshold.segment.rows": "500",
                    "stream.kafka.broker.list": "kafka_broker:9092",
                    "realtime.segment.flush.threshold.time": "3600000",
                    "stream.kafka.consumer.factory.class.name": "org.apache.pinot.plugin.stream.kafka20.KafkaConsumerFactory",
                    "stream.kafka.topic.name": "transaction_facts",
                    "stream.kafka.consumer.prop.enable.auto.commit": "false",
                    "stream.kafka.consumer.prop.fetch.min.bytes": "1",
                    "stream.kafka.consumer.prop.session.timeout.ms": "30000",
                    "stream.kafka.consumer.prop.max.poll.records": "500",
                    "stream.kafka.consumer.prop.group.id": "pinot-transaction-facts-consumer",
                    "stream.kafka.consumer.prop.client.id": "pinot-transaction-facts-client",
                    "stream.kafka.consumer.prop.isolation.level": "read_committed",
                    "stream.kafka.consumer.prop.security.protocol": "PLAINTEXT"
                }
            ]
        }
    },
    "metadata": {
        "customConfigs": {}
    },
    "isDimTable": false
}